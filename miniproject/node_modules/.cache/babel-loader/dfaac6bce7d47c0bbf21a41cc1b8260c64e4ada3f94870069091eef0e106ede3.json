{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AELAN ANNA MATHEW\\\\OneDrive\\\\Desktop\\\\miniproject\\\\miniproject\\\\src\\\\Pages\\\\Doctor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport './Doctor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Doctor() {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const today = new Date();\n\n  // Function to check if a date is today\n  const isToday = date => {\n    return date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"WELCOME BACK, DR. ARYA DEV!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: setDate,\n        value: date,\n        tileClassName: ({\n          date,\n          view\n        }) => isToday(date) ? 'highlight-today' : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"date-button\",\n      children: isToday(date) ? 'Today' : date.toLocaleDateString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        children: \"View Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        children: \"Edit Slots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Doctor, \"rW+rxy2mJ1oFEB1Cqg4Z2uVJym0=\");\n_c = Doctor;\nexport default Doctor;\nvar _c;\n$RefreshReg$(_c, \"Doctor\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","Doctor","_s","date","setDate","Date","today","isToday","getDate","getMonth","getFullYear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","tileClassName","view","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/AELAN ANNA MATHEW/OneDrive/Desktop/miniproject/miniproject/src/Pages/Doctor.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport './Doctor.css';\r\n\r\nfunction Doctor() {\r\n  const [date, setDate] = useState(new Date());\r\n  const today = new Date();\r\n\r\n  // Function to check if a date is today\r\n  const isToday = (date) => {\r\n    return (\r\n      date.getDate() === today.getDate() &&\r\n      date.getMonth() === today.getMonth() &&\r\n      date.getFullYear() === today.getFullYear()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">WELCOME BACK, DR. ARYA DEV!</h1>\r\n      <div className=\"calendar-container\">\r\n        <Calendar\r\n          onChange={setDate}\r\n          value={date}\r\n          tileClassName={({ date, view }) => isToday(date) ? 'highlight-today' : null}\r\n        />\r\n      </div>\r\n      <button className=\"date-button\">\r\n        {isToday(date) ? 'Today' : date.toLocaleDateString()}\r\n      </button>\r\n      <div className=\"button-container\">\r\n        <button className=\"action-button\">View Appointment</button>\r\n        <button className=\"action-button\">Edit Slots</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Doctor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAAC;EAC5C,MAAMC,KAAK,GAAG,IAAID,IAAI,CAAC,CAAC;;EAExB;EACA,MAAME,OAAO,GAAIJ,IAAI,IAAK;IACxB,OACEA,IAAI,CAACK,OAAO,CAAC,CAAC,KAAKF,KAAK,CAACE,OAAO,CAAC,CAAC,IAClCL,IAAI,CAACM,QAAQ,CAAC,CAAC,KAAKH,KAAK,CAACG,QAAQ,CAAC,CAAC,IACpCN,IAAI,CAACO,WAAW,CAAC,CAAC,KAAKJ,KAAK,CAACI,WAAW,CAAC,CAAC;EAE9C,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBZ,OAAA;MAAIW,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtDhB,OAAA;MAAKW,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eACjCZ,OAAA,CAACF,QAAQ;QACPmB,QAAQ,EAAEb,OAAQ;QAClBc,KAAK,EAAEf,IAAK;QACZgB,aAAa,EAAEA,CAAC;UAAEhB,IAAI;UAAEiB;QAAK,CAAC,KAAKb,OAAO,CAACJ,IAAI,CAAC,GAAG,iBAAiB,GAAG;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNhB,OAAA;MAAQW,SAAS,EAAC,aAAa;MAAAC,QAAA,EAC5BL,OAAO,CAACJ,IAAI,CAAC,GAAG,OAAO,GAAGA,IAAI,CAACkB,kBAAkB,CAAC;IAAC;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACThB,OAAA;MAAKW,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BZ,OAAA;QAAQW,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3DhB,OAAA;QAAQW,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CAhCQD,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AAkCf,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}